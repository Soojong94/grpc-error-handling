apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-no-pattern
  namespace: grpc-error-handling
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-no-pattern
  template:
    metadata:
      labels:
        app: backend-no-pattern
    spec:
      containers:
      - name: backend-service
        image: grpc-error-handling-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50052
        env:
        - name: PORT
          value: "50052"
        - name: BACKEND_TYPE
          value: "no_pattern"
        - name: DB_SERVICE_ADDRESS
          value: "db-service:50057"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          exec:
            command: ["python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50052'); stub = grpc.health.v1.health_pb2_grpc.HealthStub(channel); stub.Check(grpc.health.v1.health_pb2.HealthCheckRequest())"]
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend-no-pattern
  namespace: grpc-error-handling
spec:
  selector:
    app: backend-no-pattern
  ports:
  - port: 50052
    targetPort: 50052
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-circuit-breaker
  namespace: grpc-error-handling
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-circuit-breaker
  template:
    metadata:
      labels:
        app: backend-circuit-breaker
    spec:
      containers:
      - name: backend-service
        image: grpc-error-handling-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50053
        env:
        - name: PORT
          value: "50053"
        - name: BACKEND_TYPE
          value: "circuit_breaker"
        - name: DB_SERVICE_ADDRESS
          value: "db-service:50057"
        - name: CIRCUIT_BREAKER_FAIL_THRESHOLD
          value: "3"
        - name: CIRCUIT_BREAKER_RESET_TIMEOUT
          value: "10"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-circuit-breaker
  namespace: grpc-error-handling
spec:
  selector:
    app: backend-circuit-breaker
  ports:
  - port: 50053
    targetPort: 50053
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deadline
  namespace: grpc-error-handling
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-deadline
  template:
    metadata:
      labels:
        app: backend-deadline
    spec:
      containers:
      - name: backend-service
        image: grpc-error-handling-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50054
        env:
        - name: PORT
          value: "50054"
        - name: BACKEND_TYPE
          value: "deadline"
        - name: DB_SERVICE_ADDRESS
          value: "db-service:50057"
        - name: DEADLINE_TIMEOUT
          value: "1.0"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-deadline
  namespace: grpc-error-handling
spec:
  selector:
    app: backend-deadline
  ports:
  - port: 50054
    targetPort: 50054
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-backpressure
  namespace: grpc-error-handling
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-backpressure
  template:
    metadata:
      labels:
        app: backend-backpressure
    spec:
      containers:
      - name: backend-service
        image: grpc-error-handling-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50055
        env:
        - name: PORT
          value: "50055"
        - name: BACKEND_TYPE
          value: "backpressure"
        - name: DB_SERVICE_ADDRESS
          value: "db-service:50057"
        - name: BACKPRESSURE_WINDOW
          value: "5"
        - name: BACKPRESSURE_MAX_REQUESTS
          value: "30"
        - name: BACKPRESSURE_MAX_CONCURRENCY
          value: "8"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-backpressure
  namespace: grpc-error-handling
spec:
  selector:
    app: backend-backpressure
  ports:
  - port: 50055
    targetPort: 50055
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-all
  namespace: grpc-error-handling
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-all
  template:
    metadata:
      labels:
        app: backend-all
    spec:
      containers:
      - name: backend-service
        image: grpc-error-handling-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50056
        env:
        - name: PORT
          value: "50056"
        - name: BACKEND_TYPE
          value: "all"
        - name: DB_SERVICE_ADDRESS
          value: "db-service:50057"
        - name: CIRCUIT_BREAKER_FAIL_THRESHOLD
          value: "3"
        - name: CIRCUIT_BREAKER_RESET_TIMEOUT
          value: "10"
        - name: DEADLINE_TIMEOUT
          value: "1.0"
        - name: BACKPRESSURE_WINDOW
          value: "5"
        - name: BACKPRESSURE_MAX_REQUESTS
          value: "30"
        - name: BACKPRESSURE_MAX_CONCURRENCY
          value: "8"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-all
  namespace: grpc-error-handling
spec:
  selector:
    app: backend-all
  ports:
  - port: 50056
    targetPort: 50056
  type: ClusterIP